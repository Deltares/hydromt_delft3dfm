---
name: Build and Upload hydromt-delft3dfm to PyPI

on:
  release:
    types:
      - published
  push:
    tags:
      - 'v*'


jobs:
  build-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flit wheel twine

      - name: Build tarball and wheels
        run: |
          git clean -xdf
          git restore -SW .
          flit build

      - name: Check built artifacts
        run: |
          python -m twine check dist/*
          pwd

      - uses: actions/upload-artifact@v3
        with:
          name: releases
          path: dist

  test-built-dist:
    needs: build-artifacts
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: releases
          path: dist
      - name: List contents of built dist
        run: |
          ls -ltrh
          ls -ltrh dist

      - name: Setup environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.11"
          channels: conda-forge
          channel-priority: strict

      - name: Install hydromt-delft3dfm dependencies
        run: |
          conda install flit
          flit install --only-deps

      - name: Conda info
        run: |
          conda info
          conda list
          pip list

      - name: Verify the built dist/wheel is valid
        run: |
          python -m pip install dist/hydromt_delft3dfm*.whl
          python -c 'from hydromt_delft3dfm import __version__ as v; print(v)'
          echo "hydromt --models"

  upload-to-test-pypi:
    needs: test-built-dist
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: releases
          path: dist
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          verbose: true
          skip_existing: true

  upload-to-pypi:
    needs: test-built-dist
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: releases
          path: dist
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          verbose: true
